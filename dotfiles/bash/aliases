# TIPS
# ----
# !79                  > rerun the command 79 in the history
# !echo                > rerun the last command with 'echo' in the history
# ^r ^g                > do a reverse search, then cancel
# mv README{.txt,.doc} > change extension without retyping the name

# SHELL
# -----
alias  l='ls -la'
alias  h='history' 
alias md='mkdir -p'
alias cx='chmod +x'
alias rf='rm -rf'
alias dh='du -hd 0' # current folder size

# DOTFILES
# --------
alias sb='source ~/.bashrc'
alias reload='source ~/bin/dotfiles/bash/aliases'
alias ea='mate -w ~/bin/dotfiles/bash/aliases && reload'
alias ee="mate ~/bin/dotfiles/bash/env"

# GIT
# ---
alias  gs='git status'
alias  gd='git diff'
alias gdh='git diff HEAD HEAD~'
alias  ga='git add'
alias  gl='git log'
alias gl-='git log --follow --'
alias glf='git log --pretty=full'
alias glm='git log --pretty=full --author `git config user.name`'
alias  gh='git log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short --all'
alias ghm='git log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short'
alias  gu='git pull'
alias  gv='git mv'
alias gcl='git clone'
alias gli='git update-index --assume-unchanged' # locally ignore changes
alias glu='git update-index --no-assume-unchanged' # stop ignoring changes
alias  gc='git commit'
alias  go='git checkout'
alias gcp='git cherry-pick'
alias  gb='git branch'
alias gbr='git branch -r'
alias  gm='git merge'
alias gmf='git merge --no-ff'
alias gmm='git merge master'
alias  gp='git push'
alias  gt='git stash'
alias gta='git stash apply'
alias gam='git commit --amend' # include new changes in the last commit
alias grh='git reset HEAD'
alias grhh='git reset --hard HEAD'
alias  gla='git shortlog -ns' # Summary by author
alias  gbn="git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'" # current branch name
function gra() { # git remote add and fetch from another GitHub user
  git remote add -f $1 git://github.com/$1/`basename $PWD`.git
}
function grd() { # git restore deleted file
  git checkout $(git rev-list -n 1 HEAD -- "$1")^ -- "$1"
}
function gbt() { # git checkout and track remote branch
  git checkout -t -b $1 origin/$1
}
function gsu() { # git track the remote branch with the same name as the current
  git branch --set-upstream $(gbn) origin/$(gbn)  
}
function gg() { # git commit that reads the message from the same line
  git add . 
  git commit -v -a -m "$*"
}
function gbump() { # bumps a gem, commits and create a tag
  rake version:bump:patch
  git tag -a v`cat VERSION` -m'`git log HEAD^^..HEAD^ --format=%s`'
  git push
  git push --tags
}
function gsh() { # shortens a Github URL
  curl -i http://git.io -F "url=$1"
}

alias ungit="find . -name '.git' -exec rm -rf {} \;"

# GIT AUTOCOMPLETE
# ----------------
source ~/bin/git-completion.bash
complete -o default -o nospace -F _git_diff gd
complete -o default -o nospace -F _git_log gl
complete -o default -o nospace -F _git_pull gu
complete -o default -o nospace -F _git_checkout go
complete -o default -o nospace -F _git_branch gb
complete -o default -o nospace -F _git_merge gm
complete -o default -o nospace -F _git_merge gmf
complete -o default -o nospace -F _git_push gp
complete -o default -o nospace -F _git_stash gt
# Nice to have: the output of gbr autocompletes gbt

# RAKE
# ----
alias rdc='rake db:create'
alias rdm='rake db:migrate'
alias rds='rake db:setup'
alias rdr='rake db:rollback'
alias  rr='rake routes'
alias  rj='rake jasmine'
alias rake!='rf spec/fixtures/vcr_cassettes && rake'

# RAILS
# -----
alias  r='rails'
function rv { # Rails 2 and 3 server
  if [ -f script/rails ]; then
    script/rails server $*;
  else
    script/server $*;
  fi
}
function get_bg {
  osascript -e "tell application \"Terminal\" to get current settings of first window"
}

function set_bg {
  osascript -e "tell application \"Terminal\" to set background color of first window to $1"
}

function unset_bg {
  osascript -e "tell application \"Terminal\" to set current settings of first window to $*"
}

function rc { # custom Rails console
  term_settings=$(get_bg) # store previous color
  case $1 in # change color based on environment
    stage|staging) set_bg "{0, 6000, 3000}" ;;
    prod|production) set_bg "{6000, 3000, 0}" ;;
    *) set_bg "{3000, 3000, 6000}" ;;
  esac
  if which pry >/dev/null; then # use pry if installed
    if test -z "$1"; then # if environment is present, prefix it
      pry # pry automatically load Rails -- check .pryrc
    else
      RAILS_ENV=$1 pry
    fi
  else
    rails console $*
  fi
  unset_bg $term_settings # restore previous color
}
alias  rg='rails generate'
alias rgs='rails generate scaffold'
alias rgm='rails generate migration'
function rn {
  cd ~/code;
  rails new $* --skip-gemfile --skip-prototype --database=mysql;
  cd $1;
  cp ../Gemfile .;
  bundle;
}

# BUNDLER
# -------
alias be='bundle exec'
alias bi='bundle install'
alias bu='bundle update'

# Don't require bundle exec for main bundled commands
# From http://marc-bowes.com/2011/09/21/dry-your-bundle-exec-tears.html
bundle_commands="rake spec rspec cucumber cap watchr rails rackup guard etl"

function run_bundler_cmd () {
  if [ -r ./Gemfile ]; then
    bundle exec $@
  else
    $@
  fi
}
 
for cmd in $bundle_commands
do
  alias $cmd="run_bundler_cmd $cmd"
done

# RBENV
# -----
function gi {
  gem install $*; 
  rbenv rehash;
}

function gua { # gem uninstall all
  gem list | cut -d" " -f1 | xargs gem uninstall -aIx
}

# SVN
# ---
alias unsvn="find . -name '.svn' -exec rm -rf {} \;"

# CUSTOM DROPBOX
# --------------
PPFILE='__drop__.zip'
PPTO='gollum'

function push {
  rm -f $PPFILE
  zip -r $PPFILE $*
  scp $PPFILE $PPTO:
  rm -f $PPFILE
}

function pull {
  rm -f $PPFILE
  scp $PPTO:$PPFILE .
  ssh $PPTO rm -f $PPFILE
  unzip $PPFILE
  rm -f $PPFILE
}

# TEXTMATE
# --------
alias  m='mate .'
alias hosts='mate /etc/hosts'

# TOP
# ---
alias tc='top -o cpu'
alias tv='top -o vsize'

# ZIP
# ---
function zipr() {
  zip -r $1.zip $1
}
# HEROKU
# ------
alias ho='heroku open'
alias hrdm='heroku run rake db:migrate'
alias hrc='heroku run rails c'

# Folders
# -------

alias   c='cd ~/Documents/webapps/; cd'
alias cda='cd ~/Documents/webapps/avis'
alias cdd='cd ~/Documents/local\ dev/'
alias cds='cd ~/Documents/School/'

# Lynx.....
# ---------
alias lynx='/Applications/Lynxlet.app/Contents/Resources/lynx/bin/lynx'